{
  "_from": "image-downloader",
  "_id": "image-downloader@3.4.2",
  "_inBundle": false,
  "_integrity": "sha512-2nAJuZVn9nRqYuX1cT9iBlb6RviI1HGfGa0cL2H8HupbSkFDWOooa5x2oYzydjnQEV+R/YVum2uRXst2UII0yw==",
  "_location": "/image-downloader",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "image-downloader",
    "fetchSpec": "latest",
    "name": "image-downloader",
    "raw": "image-downloader",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/image-downloader/-/image-downloader-3.4.2.tgz",
  "_shasum": "0b1909f2437899583286a46fe55691df8ced5f83",
  "_spec": "image-downloader",
  "_where": "C:\\Users\\HieuNguyen\\Desktop\\CPS",
  "author": {
    "name": "SÃ©bastien Demanou"
  },
  "bugs": {
    "url": "https://gitlab.com/demsking/image-downloader/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "request": "^2.88.0"
  },
  "deprecated": false,
  "description": "A Nodejs module for downloading image to disk from a given URL",
  "devDependencies": {
    "jest": "^23.1.0",
    "standard": "^11.0.1"
  },
  "engines": {
    "node": ">=6.10.1"
  },
  "homepage": "https://gitlab.com/demsking/image-downloader",
  "keywords": [
    "download",
    "downloader",
    "image",
    "images"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "image-downloader",
  "optionalDependencies": {},
  "readme": "# Node Image Downloader\nA Node module for downloading image to disk from a given URL\n\n[![npm](https://img.shields.io/npm/v/image-downloader.svg)](https://www.npmjs.com/package/image-downloader) [![Build status](https://gitlab.com/demsking/image-downloader/badges/master/build.svg)](https://gitlab.com/demsking/image-downloader/commits/master) [![Test coverage](https://gitlab.com/demsking/image-downloader/badges/master/coverage.svg)](https://gitlab.com/demsking/image-downloader/pipelines)\n\n## Install\n```sh\nnpm install --save image-downloader\n```\n\n## Options\n- **url** (*required*) - the image URL to download\n- **dest** (*required*) - the image destination. Can be a directory or a filename (see usage bellow)\n- **headers** - HTTP headers (default: {})\n- **followRedirect** - follow HTTP 3xx responses as redirects (default: true)\n- **followAllRedirects** - follow non-GET HTTP 3xx responses as redirects (default: false)\n- **maxRedirects** - the maximum number of redirects to follow (default: 10)\n- **timeout** - integer containing the number of milliseconds to wait for a server to send response headers (and start the response body) before aborting the request\n\n## Usage with Promise\n```js\nconst download = require('image-downloader')\n\n// Download to a directory and save with the original filename\nconst options = {\n  url: 'http://someurl.com/image.jpg',\n  dest: '/path/to/dest'                  // Save to /path/to/dest/image.jpg\n}\n\ndownload.image(options)\n  .then(({ filename, image }) => {\n    console.log('File saved to', filename)\n  })\n  .catch((err) => {\n    console.error(err)\n  })\n\n// Download to a directory and save with an another filename\noptions = {\n  url: 'http://someurl.com/image2.jpg',\n  dest: '/path/to/dest/photo.jpg'        // Save to /path/to/dest/photo.jpg\n}\n\ndownload.image(options)\n  .then(({ filename, image }) => {\n    console.log('File saved to', filename)\n  })\n  .catch((err) => {\n    console.error(err)\n  })\n```\n\n## Usage with async/await\n```js\nconst options = {\n  url: 'http://someurl.com/image.jpg',\n  dest: '/path/to/dest'                  \n}\n\nasync function downloadIMG() {\n  try {\n    const { filename, image } = await download.image(options)\n    console.log(filename) // => /path/to/dest/image.jpg \n  } catch (e) {\n    console.error(e)\n  }\n}\n\ndownloadIMG()\n```\n\n## Previous API (deprecated)\nPreviously `image-downloader` used a callback model. This still working, but its deprecated.\n\n```js\nconst downloader = require('image-downloader')\n\n// Download to a directory and save with the original filename\nconst options = {\n  url: 'http://someurl.com/image.jpg',\n  dest: '/path/to/dest',                  // Save to /path/to/dest/image.jpg\n  done: function(err, filename, image) {\n    if (err) {\n      throw err\n    }\n    console.log('File saved to', filename)\n  }\n}\n\ndownloader(options)\n\n// Download to a directory and save with an another filename\noptions = {\n  url: 'http://someurl.com/image2.jpg',\n  dest: '/path/to/dest/photo.jpg',        // Save to /path/to/dest/photo.jpg\n  done: function(err, filename, image) {\n    if (err) {\n      throw err\n    }\n    console.log('File saved to', filename)\n  }\n}\n\ndownloader(options)\n```\n\n## License\n\nUnder the MIT license. See [LICENSE](https://gitlab.com/demsking/image-downloader/blob/master/LICENSE) file for more details.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://gitlab.com/demsking/image-downloader.git"
  },
  "scripts": {
    "lint": "standard",
    "prepublish": "npm test",
    "pretest": "npm run lint",
    "test": "jest --coverage"
  },
  "version": "3.4.2"
}
